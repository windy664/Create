name: Build
on:
    push:
    pull_request:
    workflow_dispatch:
        inputs:
            publish:
                description: Publish to Modrinth and CurseForge
                required: true
                default: "false"
            patch:
                description: Patch number, 0 for first (ex. Create 1.19.2 v0.5.0.g Patch N)
                required: true

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            PUBLISH_SUFFIX: snapshots
            MAVEN_USER: ${{ secrets.MAVEN_USER }}
            MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
            MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
            CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
            PATCH_NUMBER: ${{ github.event.inputs.patch }}
            PUBLISHING: ${{ github.event.inputs.publish }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup Java
              run: echo "JAVA_HOME=$JAVA_HOME_17_X64" >> "$GITHUB_ENV"

            - name: Loom Cache
              uses: actions/cache@v4
              with:
                  path: "**/.gradle/loom-cache"
                  key: "${{ runner.os }}-gradle-${{ hashFiles('**/libs.versions.*', '**/*.gradle*', '**/gradle-wrapper.properties') }}"
                  restore-keys: "${{ runner.os }}-gradle-"

            - name: Setup Gradle
              uses: gradle/actions/setup-gradle@v4
              with:
                  gradle-home-cache-cleanup: true

            - name: Validate Gradle Wrapper Integrity
              uses: gradle/wrapper-validation-action@v2

            - name: Build
              run: ./gradlew buildOrPublish

            - name: Capture build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: Artifacts
                  path: build/libs/

            - name: Publish to Modrinth and CurseForge
              if: ${{ github.event.inputs.publish }}
              run: ./gradlew publishMod

            - name: Upload JAR for download
              if: ${{ github.event.inputs.publish == 'false' }}
              uses: actions/upload-artifact@v4
              with:
               #   name: myplugin.jar
                  path: build/libs/*.jar
